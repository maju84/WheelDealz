apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management-alpine
        env:
          - name: RABBITMQ_DEFAULT_USER
            value: rabbit
          - name: RABBITMQ_DEFAULT_PASS
            value: rabbit
        resources:
          limits:
            memory: "1000Mi"
            cpu: "1000m"
        ports:
        - containerPort: 15672
          name: rbmq-mgmt-port  # rabbitmq management port
        - containerPort: 5672
          name: rbmq-msg-port   # rabbitmq messages port
        volumeMounts: 
        - mountPath: /var/data/rabbitmq
          name: rabbitmq-storage
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-claim

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-clusterip
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
  - port: 5672          # rabbitmq messages port
    targetPort: 5672

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-nodeport
spec:
  #type: LoadBalancer # not natively supported in minikube
  type: NodePort  
  selector:
    app: rabbitmq
  ports:
  - port: 15672         # rabbitmq management port
    targetPort: 15672

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-claim
spec:
  resources:
    requests:
      storage: 500Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce

